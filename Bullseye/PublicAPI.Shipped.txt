Bullseye.Host
Bullseye.Host.AppVeyor = 1 -> Bullseye.Host
Bullseye.Host.AzurePipelines = 2 -> Bullseye.Host
Bullseye.Host.Console = 0 -> Bullseye.Host
Bullseye.Host.GitHubActions = 3 -> Bullseye.Host
Bullseye.Host.GitLabCI = 4 -> Bullseye.Host
Bullseye.Host.TeamCity = 6 -> Bullseye.Host
Bullseye.Host.Travis = 5 -> Bullseye.Host
Bullseye.Host.VisualStudioCode = 7 -> Bullseye.Host
Bullseye.InvalidUsageException
Bullseye.InvalidUsageException.InvalidUsageException() -> void
Bullseye.InvalidUsageException.InvalidUsageException(string message) -> void
Bullseye.InvalidUsageException.InvalidUsageException(string message, System.Exception innerException) -> void
Bullseye.OptionDefinition
Bullseye.OptionDefinition.Description.get -> string
Bullseye.OptionDefinition.LongName.get -> string
Bullseye.OptionDefinition.OptionDefinition(string shortName, string longName, string description) -> void
Bullseye.OptionDefinition.ShortName.get -> string
Bullseye.Options
Bullseye.Options.Clear.get -> bool
Bullseye.Options.Clear.set -> void
Bullseye.Options.DryRun.get -> bool
Bullseye.Options.DryRun.set -> void
Bullseye.Options.Host.get -> Bullseye.Host?
Bullseye.Options.Host.set -> void
Bullseye.Options.ListDependencies.get -> bool
Bullseye.Options.ListDependencies.set -> void
Bullseye.Options.ListInputs.get -> bool
Bullseye.Options.ListInputs.set -> void
Bullseye.Options.ListTargets.get -> bool
Bullseye.Options.ListTargets.set -> void
Bullseye.Options.ListTree.get -> bool
Bullseye.Options.ListTree.set -> void
Bullseye.Options.NoColor.get -> bool
Bullseye.Options.NoColor.set -> void
Bullseye.Options.NoExtendedChars.get -> bool
Bullseye.Options.NoExtendedChars.set -> void
Bullseye.Options.Options() -> void
Bullseye.Options.Options(System.Collections.Generic.IEnumerable<(string, bool)> values) -> void
Bullseye.Options.Parallel.get -> bool
Bullseye.Options.Parallel.set -> void
Bullseye.Options.ShowHelp.get -> bool
Bullseye.Options.SkipDependencies.get -> bool
Bullseye.Options.SkipDependencies.set -> void
Bullseye.Options.UnknownOptions.get -> System.Collections.Generic.IReadOnlyList<string>
Bullseye.Options.Verbose.get -> bool
Bullseye.Options.Verbose.set -> void
Bullseye.TargetFailedException
Bullseye.TargetFailedException.TargetFailedException() -> void
Bullseye.TargetFailedException.TargetFailedException(string message) -> void
Bullseye.TargetFailedException.TargetFailedException(string message, System.Exception innerException) -> void
Bullseye.Targets
Bullseye.Targets.Add(string name, string description, System.Action action) -> void
Bullseye.Targets.Add(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn) -> void
Bullseye.Targets.Add(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action action) -> void
Bullseye.Targets.Add(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add(string name, string description, System.Func<System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add(string name, System.Action action) -> void
Bullseye.Targets.Add(string name, System.Collections.Generic.IEnumerable<string> dependsOn) -> void
Bullseye.Targets.Add(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action action) -> void
Bullseye.Targets.Add(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add(string name, System.Func<System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add<TInput>(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
Bullseye.Targets.Add<TInput>(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add<TInput>(string name, string description, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
Bullseye.Targets.Add<TInput>(string name, string description, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
Bullseye.Targets.Add<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.Add<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
Bullseye.Targets.Add<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
Bullseye.Targets.RunAndExitAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
Bullseye.Targets.RunAndExitAsync(System.Collections.Generic.IEnumerable<string> targets, Bullseye.Options options, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
Bullseye.Targets.RunWithoutExitingAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
Bullseye.Targets.RunWithoutExitingAsync(System.Collections.Generic.IEnumerable<string> targets, Bullseye.Options options, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
Bullseye.Targets.Targets() -> void
static Bullseye.Options.Definitions.get -> System.Collections.Generic.IEnumerable<Bullseye.OptionDefinition>
static Bullseye.Options.Parse(System.Collections.Generic.IEnumerable<string> args) -> (Bullseye.Options, System.Collections.Generic.List<string>)
static Bullseye.Targets.DependsOn(params string[] dependencies) -> string[]
static Bullseye.Targets.ForEach<TInput>(params TInput[] inputs) -> TInput[]
static Bullseye.Targets.RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
static Bullseye.Targets.RunTargetsAndExitAsync(System.Collections.Generic.IEnumerable<string> targets, Bullseye.Options options, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
static Bullseye.Targets.RunTargetsWithoutExitingAsync(System.Collections.Generic.IEnumerable<string> args, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
static Bullseye.Targets.RunTargetsWithoutExitingAsync(System.Collections.Generic.IEnumerable<string> targets, Bullseye.Options options, System.Func<System.Exception, bool> messageOnly = null, string messagePrefix = null) -> System.Threading.Tasks.Task
static Bullseye.Targets.Target(string name, string description, System.Action action) -> void
static Bullseye.Targets.Target(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn) -> void
static Bullseye.Targets.Target(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action action) -> void
static Bullseye.Targets.Target(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target(string name, string description, System.Func<System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target(string name, System.Action action) -> void
static Bullseye.Targets.Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn) -> void
static Bullseye.Targets.Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Action action) -> void
static Bullseye.Targets.Target(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Func<System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target(string name, System.Func<System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target<TInput>(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
static Bullseye.Targets.Target<TInput>(string name, string description, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target<TInput>(string name, string description, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
static Bullseye.Targets.Target<TInput>(string name, string description, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
static Bullseye.Targets.Target<TInput>(string name, System.Collections.Generic.IEnumerable<string> dependsOn, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
static Bullseye.Targets.Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Action<TInput> action) -> void
static Bullseye.Targets.Target<TInput>(string name, System.Collections.Generic.IEnumerable<TInput> forEach, System.Func<TInput, System.Threading.Tasks.Task> action) -> void
